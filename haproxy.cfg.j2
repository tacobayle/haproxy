#jinja2: trim_blocks: True, lstrip_blocks: True
global
        log /dev/log    local0
        log /dev/log    local1 notice
        #chroot /var/lib/haproxy
        stats socket /run/haproxy/admin.sock mode 660 level admin
        stats timeout 30s
        user root
        group root
        daemon

        # Default SSL material locations
        ca-base /etc/ssl/certs
        crt-base /etc/ssl/private

        # Default ciphers to use on SSL-enabled listening sockets.
        # For more information, see ciphers(1SSL). This list is from:
        #  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
        ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
        ssl-default-bind-options no-sslv3
        external-check

defaults
        log     global
        mode    tcp
        option  tcplog
#       mode    http
#       option  httplog
        option  dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
        errorfile 400 /etc/haproxy/errors/400.http
        errorfile 403 /etc/haproxy/errors/403.http
        errorfile 408 /etc/haproxy/errors/408.http
        errorfile 500 /etc/haproxy/errors/500.http
        errorfile 502 /etc/haproxy/errors/502.http
        errorfile 503 /etc/haproxy/errors/503.http
        errorfile 504 /etc/haproxy/errors/504.http

        {% for frontend in frontends %}
        frontend {{ frontend.name }}
          bind {{ mainIp.stdout }}:{{ frontend.port }}
          mode {{ frontend.mode }}
          default_backend {{ frontend.backend }}
        {% endfor %}

        {% for backend in backends %}
        backend {{ backend.name }}
          balance {{ backend.balance }}
          mode tcp
          option external-check
          external-check path "/usr/bin:/bin:/tmp"
          external-check command /tmp/healthMonitor.sh
          {% for server, ip in backend.servers|zip(stringBackend.stdout_lines) %}
          server {{ server.name }} {{ ip }}:{{ server.port }} check inter 10s fall 1 rise 1
          {% endfor %}
        {% endfor %}
